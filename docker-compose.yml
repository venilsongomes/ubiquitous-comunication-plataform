version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: db_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ubiquitous_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ubiquitous_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      # Expõe a porta EXTERNA 29092 para o seu Windows (Host)
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      
      # --- Configuração Híbrida de Listeners ---
      # 1. Mapeia os nomes dos listeners para os protocolos
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      
      # 2. Quais portas o Kafka deve "ouvir" DENTRO do contêiner
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:29092
      
      # 3. Quais endereços o Kafka deve "anunciar" para o mundo
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      
      # 4. Qual listener os outros brokers devem usar para se comunicar
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      # --- Fim da Configuração ---
      
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  postgres_data: